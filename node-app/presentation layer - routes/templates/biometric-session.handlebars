{{!-- presentation layer - routes/templates/biometric-session.handlebars --}}
<div class="page-container">
  <div class="biometric-container">
    <div class="header">
      <div class="logo-container">
        <i class="fas fa-keyboard"></i>
      </div>
      <h2 id="welcomeMessage">Welcome, {{username}}!</h2>
      <h1>Biometric Session</h1>
    </div>
    
    {{#if error}}
    <div class="error-banner">
      <i class="fas fa-exclamation-circle"></i>
      <span>{{error}}</span>
    </div>
    {{/if}}
    
    <div class="instructions">
      <div class="session-progress">
        <div class="progress-indicator">
          <div class="progress-circles">
            <div class="circle completed" id="circle1">1</div>
            <div class="line completed"></div>
            <div class="circle completed" id="circle2">2</div>
            <div class="line completed"></div>
            <div class="circle active" id="circle3">3</div>
          </div>
        </div>
      </div>
      
      <div class="instruction-container">
        <div class="instruction-box">
          <i class="fas fa-shield-alt"></i>
          For security and authentication purposes, please type each text sample exactly as it appears.
        </div>
        <div class="instruction-box">
          <i class="fas fa-fingerprint"></i>
          Your typing patterns will be used to create your unique biometric profile.
        </div>
      </div>
    </div>
    
    <div class="session-container" id="session1">
      <div class="fixed-text-container">
        <p id="fixedText1">The quick brown fox jumps over the lazy dog. Security through biometrics provides a seamless way to verify your identity without passwords.</p>
      </div>
      
      <div class="form-group">
        <label for="typingInput1">
          <i class="fas fa-pen"></i>
          Type the text exactly as shown above:
        </label>
        <textarea id="typingInput1" placeholder="Start typing here..."></textarea>
        <div id="typingError1" class="error">
          <i class="fas fa-exclamation-circle"></i>
          Please type the exact text shown above
        </div>
      </div>
      
      <button id="nextButton1" class="next-button" disabled>
        <span>Next Session</span>
        <i class="fas fa-arrow-right"></i>
      </button>
    </div>
    
    <div class="session-container" id="session2" style="display: none;">
      <div class="fixed-text-container">
        <p id="fixedText2">Biometric authentication measures unique physical characteristics to verify a person's identity. Examples include fingerprints, facial recognition, and keystroke dynamics.</p>
      </div>
      
      <div class="form-group">
        <label for="typingInput2">
          <i class="fas fa-pen"></i>
          Type the text exactly as shown above:
        </label>
        <textarea id="typingInput2" placeholder="Start typing here..."></textarea>
        <div id="typingError2" class="error">
          <i class="fas fa-exclamation-circle"></i>
          Please type the exact text shown above
        </div>
      </div>
      
      <button id="nextButton2" class="next-button" disabled>
        <span>Next Session</span>
        <i class="fas fa-arrow-right"></i>
      </button>
    </div>
    
    <div class="session-container" id="session3" style="display: none;">
      <div class="fixed-text-container">
        <p id="fixedText3">Keystroke dynamics analyze typing patterns like rhythm, speed, and pressure. These factors create a unique profile that can help verify your identity based on how you type.</p>
      </div>
      
      <div class="form-group">
        <label for="typingInput3">
          <i class="fas fa-pen"></i>
          Type the text exactly as shown above:
        </label>
        <textarea id="typingInput3" placeholder="Start typing here..."></textarea>
        <div id="typingError3" class="error">
          <i class="fas fa-exclamation-circle"></i>
          Please type the exact text shown above
        </div>
      </div>
      
      <button id="nextButton3" class="next-button" disabled>
        <span>Complete Training</span>
        <i class="fas fa-check"></i>
      </button>
    </div>
    
    <form id="submissionForm" action="/submit-biometric" method="POST" style="display: none;">
      <input type="hidden" name="username" value="{{username}}">
      <input type="hidden" name="sessionsCompleted" value="3">
    </form>
  </div>
</div>

<style>
  /* Import Font Awesome for icons */
  @import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css');
  
  /* Import Montserrat font */
  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap');
  
  /* Base styles */
  body {
    font-family: 'Montserrat', sans-serif;
    background-color: #F5F5F8;
    margin: 0;
    padding: 0;
    color: #363853;
  }
  
  /* Page container for centering */
  .page-container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    padding: 20px;
  }
  
  /* Card container */
  .biometric-container {
    background-color: white;
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 800px;
    padding: 50px 40px 40px 40px;
    margin: 0 auto;
  }
  
  /* Header styling */
  .header {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 35px;
  }
  
  .logo-container {
    background-color: #322549;
    color: white;
    width: 80px;
    height: 80px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 20px;
  }
  
  .logo-container i {
    font-size: 32px;
  }
  
  h1 {
    color: #322549;
    text-align: center;
    margin: 0 0 10px 0;
    font-size: 30px;
    font-weight: 700;
  }
  
  h2 {
    color: #5A4B92;
    text-align: center;
    margin: 0;
    font-weight: 500;
    font-size: 22px;
  }
  
  /* Instructions */
  .instructions {
    margin-bottom: 30px;
    color: #4a5568;
    line-height: 1.6;
  }
  
  .instruction-container {
    display: flex;
    gap: 15px;
    margin-bottom: 20px;
  }
  
  .instruction-box {
    background-color: #F5F5F8;
    padding: 15px 20px;
    font-size: 15px;
    flex: 1;
    display: flex;
    align-items: center;
  }
  
  .instruction-box i {
    margin-right: 10px;
    color: #5A4B92;
    font-size: 15px;
  }
  
  /* Session progress indicators */
  .session-progress {
    margin: 0 0 30px 0;
  }
  
  .progress-indicator {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  
  .progress-circles {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 15px;
  }
  
  .circle {
    width: 34px;
    height: 34px;
    border-radius: 50%;
    background-color: #5A4B92;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: 600;
    font-size: 18px;
  }
  
  .circle.active {
    background-color: #322549;
    color: white;
  }
  
  .circle.completed {
    background-color: #5A4B92;
    color: white;
  }
  
  .line {
    height: 2px;
    width: 80px;
    background-color: #5A4B92;
    margin: 0 10px;
  }
  
  .line.completed {
    background-color: #5A4B92;
  }
  
  .session-indicator {
    color: #5A4B92;
    font-weight: 600;
    margin: 8px 0 0 0;
    font-size: 15px;
  }
  
  /* Text container */
  .fixed-text-container {
    background-color: #F8F9FA;
    border-radius: 8px;
    padding: 30px 35px;
    margin-bottom: 30px;
    position: relative;
    border-left: 4px solid #322549;
  }
  
  .quote-icon {
    display: none;
  }
  
  .fixed-text-container p {
    font-size: 15px;
    line-height: 1.7;
    color: #363853;
    margin: 0;
    font-weight: 500;
  }
  
  /* Form elements */
  .form-group {
    margin-bottom: 25px;
  }
  
  label {
    display: flex;
    align-items: center;
    margin-bottom: 12px;
    font-weight: 500;
    color: #5A4B92;
    font-size: 16px;
  }
  
  label i {
    margin-right: 8px;
    color: #5A4B92;
  }
  
  textarea {
    width: 100%;
    padding: 16px 20px;
    border: 1px solid #D0D0D5;
    border-radius: 8px;
    font-size: 16px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 400;
    transition: all 0.2s ease;
    box-sizing: border-box;
    min-height: 150px;
    resize: none;
    line-height: 1.7;
    color: #363853; /* Default text color */
    box-shadow: none;
  }
  
  textarea.text-error {
    color: #e74c3c; /* Red text for incorrect input */
  }
  
  textarea:focus {
    border-color: #5A4B92;
    outline: none;
    box-shadow: none;
  }
  
  /* Error messages */
  .error {
    color: #e74c3c;
    font-size: 14px;
    font-weight: 500;
    margin-top: 8px;
    display: none;
    display: flex;
    align-items: center;
    padding-left: 5px;
  }
  
  .error i {
    margin-right: 6px;
    font-size: 14px;
  }
  
  .error-banner {
    background-color: #ffebee;
    color: #e74c3c;
    padding: 15px;
    border-radius: 15px;
    margin-bottom: 25px;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .error-banner i {
    margin-right: 8px;
    font-size: 15px;
  }
  
  /* Buttons */
  .next-button {
    background-color: #322549;
    color: white;
    border: none;
    border-radius: 25px;
    padding: 14px 20px;
    font-size: 16px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
    letter-spacing: 0.3px;
    cursor: pointer;
    width: 100%;
    transition: all 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
  }
  
  .next-button:hover:not([disabled]) {
    background-color: #473660;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(50, 37, 73, 0.2);
  }
  
  .next-button:active:not([disabled]) {
    transform: translateY(0);
  }
  
  .next-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  /* Container transitions */
  .session-container {
    transition: all 0.5s ease;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const session1 = document.getElementById('session1');
    const session2 = document.getElementById('session2');
    const session3 = document.getElementById('session3');
    const currentSessionIndicator = document.getElementById('currentSession');
    
    const circle1 = document.getElementById('circle1');
    const circle2 = document.getElementById('circle2');
    const circle3 = document.getElementById('circle3');
    const circles = document.querySelectorAll('.circle');
    const lines = document.querySelectorAll('.line');
    
    const fixedText1 = document.getElementById('fixedText1').textContent;
    const fixedText2 = document.getElementById('fixedText2').textContent;
    const fixedText3 = document.getElementById('fixedText3').textContent;
    
    const typingInput1 = document.getElementById('typingInput1');
    const typingInput2 = document.getElementById('typingInput2');
    const typingInput3 = document.getElementById('typingInput3');
    
    const typingError1 = document.getElementById('typingError1');
    const typingError2 = document.getElementById('typingError2');
    const typingError3 = document.getElementById('typingError3');
    
    const nextButton1 = document.getElementById('nextButton1');
    const nextButton2 = document.getElementById('nextButton2');
    const nextButton3 = document.getElementById('nextButton3');
    
    const submissionForm = document.getElementById('submissionForm');
    
    // Hide error messages initially
    typingError1.style.display = 'none';
    typingError2.style.display = 'none';
    typingError3.style.display = 'none';
    
    // Setup event listeners for text inputs
    setupInputValidation(typingInput1, fixedText1, nextButton1, typingError1);
    setupInputValidation(typingInput2, fixedText2, nextButton2, typingError2);
    setupInputValidation(typingInput3, fixedText3, nextButton3, typingError3);
    
    // Focus on the first input
    typingInput1.focus();
    
    // Set up navigation between sessions
    nextButton1.addEventListener('click', function() {
      // Update session display
      session1.style.display = 'none';
      session2.style.display = 'block';
      currentSessionIndicator.textContent = '2';
      
      // Update progress indicators
      circle1.classList.remove('active');
      circle1.classList.add('completed');
      circle2.classList.add('active');
      lines[0].classList.add('completed');
      
      // Focus on next input
      typingInput2.focus();
    });
    
    nextButton2.addEventListener('click', function() {
      // Update session display
      session2.style.display = 'none';
      session3.style.display = 'block';
      currentSessionIndicator.textContent = '3';
      
      // Update progress indicators
      circle2.classList.remove('active');
      circle2.classList.add('completed');
      circle3.classList.add('active');
      lines[1].classList.add('completed');
      
      // Focus on next input
      typingInput3.focus();
    });
    
    nextButton3.addEventListener('click', function() {
      // Submit the form to complete the biometric session
      submissionForm.submit();
    });
    
    // Function to validate input text against fixed text
    function setupInputValidation(inputElement, fixedText, buttonElement, errorElement) {
      inputElement.addEventListener('input', function() {
        const userInput = inputElement.value.trim();
        const expectedText = fixedText.trim();
        
        // Check if texts match character by character to determine if there's an error
        let isError = false;
        
        // Check if any character is different or if length is different
        if (userInput.length > 0) {
          if (userInput.length > expectedText.length || 
              userInput !== expectedText.substring(0, userInput.length)) {
            isError = true;
          }
        }
        
        // Update text color based on error status
        if (isError) {
          inputElement.classList.add('text-error');
        } else {
          inputElement.classList.remove('text-error');
        }
        
        // Enable button only when text matches exactly
        if (userInput === expectedText) {
          buttonElement.disabled = false;
          errorElement.style.display = 'none';
        } else {
          buttonElement.disabled = true;
          // Only show error message if user has typed something substantial
          if (userInput.length > expectedText.length * 0.5) {
            errorElement.style.display = 'flex';
          } else {
            errorElement.style.display = 'none';
          }
        }
      });
    }
  });
</script>