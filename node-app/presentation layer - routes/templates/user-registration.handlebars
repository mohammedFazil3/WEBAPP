{{!-- presentation layer - routes/templates/user-registration.handlebars --}}
<div class="page-container">
  <div class="registration-container">
    <div class="header">
      <div class="logo-container">
        <i class="fas fa-fingerprint"></i>
      </div>
      <h1>ProfilerX User Registration</h1>
    </div>
    
    {{#if error}}
    <div class="error-banner">
      <i class="fas fa-exclamation-circle"></i>
      <span>{{error}}</span>
    </div>
    {{/if}}
    
    <form id="registrationForm" action="/submit-registration" method="POST" novalidate>
      <div class="form-group">
        <label for="username">Name</label>
        <div class="input-container">
          <i class="fas fa-user"></i>
          <input type="text" id="username" name="username" placeholder="Enter your name">
        </div>
        <div id="usernameError" class="error">
          <i class="fas fa-exclamation-circle"></i>
          Name is required
        </div>
      </div>
      
      <div class="form-group">
        <label for="email">Email</label>
        <div class="input-container">
          <i class="fas fa-envelope"></i>
          <input type="email" id="email" name="email" placeholder="Enter your email address">
        </div>
        <div id="emailEmptyError" class="error">
          <i class="fas fa-exclamation-circle"></i>
          Email is required
        </div>
        <div id="emailFormatError" class="error">
          <i class="fas fa-exclamation-circle"></i>
          Please enter a valid email address
        </div>
      </div>
      
      <button type="submit">
        <span>Begin Session</span>
        <i class="fas fa-arrow-right"></i>
      </button>
    </form>
  </div>
</div>

<style>
  /* Import Font Awesome for icons */
  @import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css');
  
  /* Import Montserrat font */
  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap');
  
  /* Base styles */
  body {
    font-family: 'Montserrat', sans-serif;
    background-color: #F5F5F8;
    margin: 0;
    padding: 0;
    color: #363853;
  }

  /* Page container for centering */
  .page-container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    padding: 20px;
  }
  
  /* Card container */
  .registration-container {
    background-color: white;
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 500px;
    padding: 40px;
    margin: 0 auto;
  }
  
  /* Header styling */
  .header {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 30px;
  }
  
  .logo-container {
    background-color: #322549;
    color: white;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 15px;
  }
  
  .logo-container i {
    font-size: 28px;
  }
  
  h1 {
    color: #322549;
    text-align: center;
    margin: 0;
    font-size: 26px;
    font-weight: 700;
    letter-spacing: -0.5px;
  }
  
  /* Form styling */
  .form-group {
    margin-bottom: 24px;
  }
  
  label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    color: #363853;
    font-size: 15px;
    letter-spacing: 0.2px;
  }
  
  .input-container {
    position: relative;
    display: flex;
    align-items: center;
  }
  
  .input-container i {
    position: absolute;
    left: 12px;
    color: #7E7E92;
    font-size: 16px;
  }
  
  input {
    width: 100%;
    padding: 12px 12px 12px 40px;
    border: 1px solid #E0E0E5;
    border-radius: 25px;
    font-size: 16px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 500;
    transition: all 0.3s ease;
    box-sizing: border-box;
  }
  
  input:focus {
    border-color: #322549;
    outline: none;
    box-shadow: 0 0 0 3px rgba(50, 37, 73, 0.1);
  }
  
  .error {
    color: #e74c3c;
    font-size: 14px;
    font-weight: 500;
    margin-top: 8px;
    display: none;
    display: flex;
    align-items: center;
    padding-left: 5px;
  }
  
  .error i {
    margin-right: 6px;
    font-size: 14px;
  }
  
  .error-banner {
    background-color: #ffebee;
    color: #e74c3c;
    padding: 15px;
    border-radius: 15px;
    margin-bottom: 25px;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .error-banner i {
    margin-right: 8px;
    font-size: 18px;
  }
  
  button {
    background-color: #322549;
    color: white;
    border: none;
    border-radius: 25px;
    padding: 14px 20px;
    font-size: 16px;
    font-family: 'Montserrat', sans-serif;
    font-weight: 600;
    letter-spacing: 0.3px;
    cursor: pointer;
    width: 100%;
    transition: all 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
  }
  
  button:hover {
    background-color: #473660;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(50, 37, 73, 0.2);
  }
  
  button:active {
    transform: translateY(0);
  }
  
  .input-error {
    border-color: #e74c3c;
  }
  
  .input-error:focus {
    box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('registrationForm');
    const username = document.getElementById('username');
    const email = document.getElementById('email');
    
    const usernameError = document.getElementById('usernameError');
    const emailEmptyError = document.getElementById('emailEmptyError');
    const emailFormatError = document.getElementById('emailFormatError');
    
    // Hide error messages initially
    usernameError.style.display = 'none';
    emailEmptyError.style.display = 'none';
    emailFormatError.style.display = 'none';
    
    form.addEventListener('submit', function(event) {
      event.preventDefault();
      let isValid = true;
      
      // Reset previous error states
      resetErrors();
      
      // Validate username
      if (username.value.trim() === '') {
        displayError(username, usernameError);
        isValid = false;
      }
      
      // Validate email
      if (email.value.trim() === '') {
        displayError(email, emailEmptyError);
        isValid = false;
      } else if (!isValidEmail(email.value)) {
        displayError(email, emailFormatError);
        isValid = false;
      }
      
      if (isValid) {
        // If the form is valid, submit it
        form.submit();
      }
    });
    
    function displayError(input, errorElement) {
      input.classList.add('input-error');
      errorElement.style.display = 'flex';
    }
    
    function resetErrors() {
      // Remove all error classes and hide error messages
      username.classList.remove('input-error');
      email.classList.remove('input-error');
      
      usernameError.style.display = 'none';
      emailEmptyError.style.display = 'none';
      emailFormatError.style.display = 'none';
    }
    
    function isValidEmail(email) {
      // Regular expression for email validation
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    }
  });
</script>